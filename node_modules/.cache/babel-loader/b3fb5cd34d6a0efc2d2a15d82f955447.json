{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\Tasmia\\\\toptal-checkout-react\\\\src\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\"; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    getProducts().then(data => {\n      const productsWithQuantity = data.map(product => ({ ...product,\n        quantity: 1\n      }));\n      setProducts(productsWithQuantity);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const updateQuantity = (productId, updatedParameter) => {\n    const index = products.findIndex(product => product.id === productId);\n    console.log(\"=======product\", index);\n    const updatedProduct = { ...products[index],\n      quantity: updatedParameter === \"increase\" ? products[index].quantity + 1 : products[index].quantity - 1\n    };\n    const updatedProducts = [...products];\n    updatedProducts[index] = updatedProduct;\n    console.log(\"updated quantity======\", updatedProducts);\n    setProducts(updatedProducts);\n  }; // console.log(\"products=======\", products);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!products.length && /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: product.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: product.availableCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: `$ ${product.price}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: `$ ${(product.price * product.quantity).toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                disabled: product.quantity > product.availableCount ? true : false,\n                onClick: () => updateQuantity(product.id, \"increase\"),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                disabled: product.quantity === 1 ? true : false,\n                onClick: () => updateQuantity(product.id, \"decrease\"),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"EQ6PyWb2n0tsg9pUk1SaaItFlVQ=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["D:/ReactJS/Tasmia/toptal-checkout-react/src/Checkout.js"],"names":["useEffect","useState","useCallback","styles","LoadingIcon","getProducts","Product","id","name","availableCount","price","orderedQuantity","total","actionButton","Checkout","products","setProducts","quantity","setQuantity","then","data","productsWithQuantity","map","product","catch","error","console","log","updateQuantity","productId","updatedParameter","index","findIndex","updatedProduct","updatedProducts","header","length","table","toFixed"],"mappings":"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","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n}) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${price}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button className={styles.actionButton}>+</button>\n        <button className={styles.actionButton}>-</button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [products, setProducts] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    getProducts()\n      .then((data) => {\n        const productsWithQuantity = data.map((product) => ({\n          ...product,\n          quantity: 1,\n        }));\n        setProducts(productsWithQuantity);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const updateQuantity = (productId, updatedParameter) => {\n    const index = products.findIndex((product) => product.id === productId);\n    console.log(\"=======product\", index);\n\n    const updatedProduct = {\n      ...products[index],\n      quantity:\n        updatedParameter === \"increase\"\n          ? products[index].quantity + 1\n          : products[index].quantity - 1,\n    };\n\n    const updatedProducts = [...products];\n    updatedProducts[index] = updatedProduct;\n    console.log(\"updated quantity======\", updatedProducts);\n    setProducts(updatedProducts);\n  };\n\n  // console.log(\"products=======\", products);\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {!products.length && <LoadingIcon />}\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Products should be rendered here */}\n            {products.map((product) => (\n              <tr key={product.id}>\n                <th>{product.id}</th>\n                <th>{product.name}</th>\n                <th>{product.availableCount}</th>\n                <th>{`$ ${product.price}`}</th>\n                <th>{quantity}</th>\n                <th>{`$ ${(product.price * product.quantity).toFixed(2)}`}</th>\n                <th>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    disabled={\n                      product.quantity > product.availableCount ? true : false\n                    }\n                    onClick={() => updateQuantity(product.id, \"increase\")}\n                  >\n                    +\n                  </button>\n                </th>\n                <th>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    disabled={product.quantity === 1 ? true : false}\n                    onClick={() => updateQuantity(product.id, \"decrease\")}\n                  >\n                    -\n                  </button>\n                </th>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        <p>Discount: $ </p>\n        <p>Total: $ </p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}